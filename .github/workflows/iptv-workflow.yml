name: IPTV Workflow

on:
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch:

jobs:
  iptv-process:
    runs-on: ubuntu-latest   

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v3

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 📚 Install dependencies
        run: |
          pip install -r requirements.txt || echo "No requirements.txt found"

      - name: Install dependencies & Playwright
        run: |
          python -m pip install --upgrade pip
          pip install playwright
          playwright install firefox # 🌐 Installs the Playwright Firefox browser binary
          playwright install-deps # 🔧 This is the crucial step to install all necessary system dependencies

      - name: 🚀 Run fstv.py
        run: |
          echo "Running fstv.py..."
          python fstv.py || { echo "❌ fstv.py failed"; exit 1; }
          echo "✅ fstv.py completed."

      - name: 💾 Commit & Push after fstv.py
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions@users.noreply.github.com"
          git add out/FSTV.m3u8
          if git diff --cached --quiet; then echo "✅ No changes to commit"; exit 0; fi
          git commit -m "📡 Update FSTV playlist $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          git pull origin main --rebase || exit 1
          git push origin main || exit 1

      - name: 🧹 Run mergeclean.py
        run: |
          echo "Running mergeclean.py..."
          python mergeclean.py || { echo "❌ mergeclean.py failed"; exit 1; }
          echo "✅ mergeclean.py completed."

      - name: 💾 Commit & Push after mergeclean.py
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git add out/MergedCleanPlaylist.m3u8
          if git diff --cached --quiet; then echo "✅ No changes to commit"; exit 0; fi
          git commit -m "🧼 Update merged playlist $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          git pull origin main --rebase || exit 1
          git push origin main || exit 1

      - name: 📅 Run epg_getcher.py
        working-directory: .
        run: |
          echo "Running scripts/epg_getcher.py..."
          python scripts/epg_getcher.py || { echo "❌ epg_getcher.py failed"; exit 1; }
          echo "✅ epg_getcher.py completed."

      - name: Commit updated EPG file only if changed
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@users.noreply.github.com"
      
          # 比较 DrewLive3.xml.gz 是否有变更
          if ! cmp -s out/DrewLive3.xml.gz $(git ls-tree origin/main -r --name-only | grep out/DrewLive3.xml.gz | xargs -I{} git show origin/main:{} > /tmp/old_drew.xml.gz); then
            echo "🔄 DrewLive3.xml.gz has changed, committing..."
            git add out/DrewLive3.xml.gz
            git commit -m "🔄 Update DrewLive3.xml.gz"
          else
            echo "✅ DrewLive3.xml.gz is unchanged, skipping commit."
          fi
      
          # 比较 epg_temp.xml.gz 是否有变更
          if ! cmp -s out/epg_temp.xml.gz $(git ls-tree origin/main -r --name-only | grep out/epg_temp.xml.gz | xargs -I{} git show origin/main:{} > /tmp/old_epg.xml.gz); then
            echo "🔄 epg_temp.xml.gz has changed, committing..."
            git add out/epg_temp.xml.gz
            git commit -m "🔄 Update epg_temp.xml.gz"
          else
            echo "✅ epg_temp.xml.gz is unchanged, skipping commit."
          fi
      
          # 如果有提交则推送
          if [ "$(git rev-parse HEAD)" != "$(git rev-parse origin/main)" ]; then
            git pull origin main --rebase
            git push
          else
            echo "🚫 No changes to push."
          fi
